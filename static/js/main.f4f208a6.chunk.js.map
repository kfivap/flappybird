{"version":3,"sources":["GameContext.js","components/Bird.js","components/Screen.js","components/Obstruction.js","components/Score.js","components/GameOver.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["GameContext","React","createContext","GameProvider","children","useState","window","innerHeight","pos","setPos","falling","setFalling","score","setScore","gameOverTimeout","setGameOverTimeout","restart","setRestart","immortal","setImmortal","useEffect","posss","setInterval","clearInterval","birdRect","setBirdRect","passageRect","setPassageRect","top","bottom","localMax","parseInt","localStorage","getItem","setItem","Provider","value","Bird","context","useContext","birdRef","useRef","current","getBoundingClientRect","e","console","log","className","style","ref","Screen","onClick","setTimeout","Obstruction","props","initPos","position","setPosition","transition","setTransition","prevState","setRnd","Math","floor","random","rnd","obsBottom","passageRef","ps","br","left","right","innerWidth","transitionTimingFunction","height","Score","GameOver","maxScore","Game","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4f208a6.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nexport const GameContext = React.createContext()\r\n\r\n\r\nexport const GameProvider = ({children}) => {\r\n\r\n    const [pos, setPos] = useState(~~(window.innerHeight * 0.45))\r\n\r\n    const [falling, setFalling] = useState(true)\r\n\r\n    const [score, setScore] = useState(0)\r\n    const [gameOverTimeout, setGameOverTimeout] = useState(0)\r\n    const [restart, setRestart] = useState(false)\r\n    const [immortal, setImmortal] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (pos + 40 + 50 < window.innerHeight && falling) {\r\n            const posss = setInterval(() => setPos(pos + 30), 100);\r\n            // console.log(4554)\r\n\r\n            return () => clearInterval(posss);\r\n        }\r\n    }, [falling, pos]);\r\n\r\n\r\n\r\n\r\n\r\nconst [birdRect, setBirdRect] = useState()\r\n\r\n\r\n    const [passageRect, setPassageRect] = useState()\r\n\r\n    useEffect(()=>{\r\n        if(passageRect){\r\n\r\n            // console.log(birdRect.bottom , passageRect.bottom)\r\nif(birdRect.top> passageRect.top && birdRect.bottom<passageRect.bottom){\r\n    //console.log('go')\r\n}else{\r\n    if(!immortal){\r\n    setGameOverTimeout(99999900) //115 days\r\n  //  console.log('lose')\r\n\r\n        let localMax = parseInt(localStorage.getItem('maxScore'))\r\n\r\n        if(!localMax){\r\n            localStorage.setItem('maxScore', score)\r\n        }\r\n        if(localMax<=score){\r\n        localStorage.setItem('maxScore', score)}\r\n    }\r\n    else{\r\n         setImmortal(false)\r\n    }\r\n}\r\n\r\n            }\r\n    },[passageRect, gameOverTimeout] )\r\n\r\n\r\n\r\n    return (\r\n        <GameContext.Provider value={{\r\n\r\n            pos, setPos,\r\n            falling, setFalling,\r\n\r\n            birdRect,setBirdRect,\r\n\r\n            passageRect, setPassageRect,\r\n            score, setScore,\r\n            gameOverTimeout, setGameOverTimeout,\r\n            restart, setRestart,\r\n            immortal, setImmortal,\r\n\r\n        }}>\r\n            {children}\r\n        </GameContext.Provider>\r\n    )\r\n}\r\n","\r\nimport './Bird.css'\r\nimport {useContext, useEffect, useRef,} from \"react\";\r\nimport {GameContext} from \"../GameContext\";\r\n\r\nexport const Bird = () =>{\r\n\r\n\r\n    const context = useContext(GameContext)\r\n\r\n\r\n    const birdRef = useRef()\r\n\r\nuseEffect( ()=> {\r\n    try {\r\n\r\n         context.setBirdRect(birdRef.current.getBoundingClientRect())\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}, [context.pos, context.falling])\r\n\r\n\r\n    return(\r\n        <div className='bird' style={{top: context.pos}}\r\n        ref={birdRef}\r\n        >{context.pos}</div>\r\n    )\r\n}","import './Screen.css'\r\nimport {GameContext} from \"../GameContext\";\r\nimport {useContext} from \"react\";\r\n\r\nexport const Screen = ()=>{\r\n\r\n    const context = useContext(GameContext)\r\n\r\n    const clickHandler = ()=>{\r\ncontext.setPos(context.pos - 135)\r\n\r\n        context.setFalling(false)\r\n\r\n        setTimeout(()=>{context.setFalling(true)}, 100)\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='Screen' onClick={ clickHandler}></div>\r\n    )\r\n}","import './Obstruction.css'\r\nimport {useContext, useEffect, useRef, useState} from \"react\";\r\nimport {GameContext} from \"../GameContext\";\r\n\r\nexport const Obstruction = (props) => {\r\n\r\n\r\n    const [position, setPosition] = useState(props.initPos);\r\n\r\n    const [transition, setTransition] = useState('linear')\r\n\r\n    const context = useContext(GameContext)\r\n\r\n    useEffect( () => {\r\n            let pos\r\n            // console.log(position)\r\n\r\n            if(position>-50){\r\n\r\n\r\n                pos = setInterval(() => setPosition(prevState => prevState-10), context.gameOverTimeout+200);\r\n\r\n                return () => clearInterval(pos);\r\n            }\r\n\r\n            else {\r\n\r\n                setTransition('step-start')\r\ncontext.setScore(prevState => prevState+1)\r\n                setRnd(rndFunc())\r\n                setPosition(150)\r\n                setTimeout(()=>{setTransition('linear')}, 200)\r\n\r\n            }\r\n\r\n\r\n        }, [position]\r\n    );\r\n\r\n    const [rnd, setRnd] = useState()\r\n\r\n\r\n    function rndFunc(){\r\n        return (  Math.floor(Math.random() * 41)+5)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const obsBottom = useRef()\r\n    const passageRef = useRef()\r\n\r\n    useEffect( ()=> {\r\n        try {\r\n           const ps =  passageRef.current.getBoundingClientRect()\r\n            const br = context.birdRect\r\n            // console.log(ps.left< context.birdRect.left)\r\n            if(ps.left-50> context.birdRect.left && br.right+(window.innerWidth*0.15)>ps.right\r\n            )  {\r\n            context.setPassageRect(ps)\r\n\r\n            }\r\n            if(ps.left+50> context.birdRect.left && br.right+(window.innerWidth*0.15)>ps.right\r\n            )  {\r\n                context.setPassageRect(ps)\r\n\r\n            }\r\nelse {\r\n                context.setPassageRect(0)\r\n            }\r\n\r\n\r\n\r\n\r\n        } catch (e) {\r\n            // console.log(e)\r\n        }\r\n    }, [position])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div>\r\n\r\n            <div className='obstruction' style={{left: `${position}vw`,\r\n                transitionTimingFunction: transition\r\n            }}>\r\n\r\n                <div className='obstructionTop' style={{height: `${rnd}vh`}}\r\n                     ref={obsBottom}\r\n                >&nbsp; </div>\r\n                <div className='passage'\r\n                ref = {passageRef}\r\n                > &nbsp;</div>\r\n                <div className='obstructionBottom'\r\n                     style={{height: `${100-rnd-40}vh`}}\r\n                > &nbsp;</div>\r\n            </div>\r\n        </div>\r\n\r\n</div>\r\n    )\r\n}","import {useContext, useEffect, useState} from \"react\";\r\nimport {GameContext} from \"../GameContext\";\r\n\r\nexport const Score  = () =>{\r\n\r\n    const context = useContext(GameContext)\r\n\r\n    const [score, setScore] = useState()\r\n\r\n    useEffect(()=>{\r\nsetScore(context.score)\r\n   \r\n    }, [context.score])\r\n\r\n    return(<h1>{score}</h1>)\r\n}","import {useContext} from \"react\";\r\nimport {GameContext} from \"../GameContext\";\r\nimport './GameOver.css'\r\n\r\nexport const GameOver  = () =>{\r\n\r\n    const context = useContext(GameContext)\r\n\r\n\r\n\r\n    const clickHandler = () =>{\r\n        context.setImmortal(true)\r\n        context.setGameOverTimeout(0)\r\n        context.setScore(0)\r\n        context.setRestart(true)\r\n       context.setPos(~~(window.innerHeight * 0.45))\r\n\r\n    }\r\n\r\n    const maxScore = localStorage.getItem('maxScore')\r\n\r\n\r\nif (context.gameOverTimeout>50000){\r\n\r\n    return (<div className='GameOver'>\r\n\r\n        <div className='Restart'>\r\n            <br/>\r\n            Your Score: {context.score}\r\n            <br/>\r\n            Max: {maxScore} <small>(localstorage)</small>\r\n            <br/>\r\n            <br/>\r\n            <button  onClick={clickHandler}>Restart game</button>\r\n    </div>\r\n    </div>)\r\n}\r\n\r\n    return(null)\r\n}","\r\nimport React, {useContext} from 'react'\r\n\r\nimport {Bird} from \"./Bird\";\r\nimport {Screen} from \"./Screen\";\r\nimport {Obstruction} from \"./Obstruction\";\r\nimport {Score} from \"./Score\";\r\nimport {GameOver} from \"./GameOver\";\r\nimport {GameContext} from \"../GameContext\";\r\n\r\n\r\n\r\nexport const Game = (props) => {\r\n\r\n    const context = useContext(GameContext)\r\n\r\n\r\n\r\nif(context.restart ){\r\n\r\n    context.setRestart(false)\r\n    return null\r\n}\r\n\r\n\r\n    return (\r\n<>\r\n    <Screen/>\r\n    <Bird/>\r\n<Score/>\r\n<GameOver/>\r\n\r\n    <Obstruction initPos={0}/>\r\n    <Obstruction initPos={70}/>\r\n    <Obstruction initPos={140}/>\r\n\r\n</>\r\n    )\r\n}","import './App.css';\nimport React from \"react\";\nimport {Game} from \"./components/Game\";\nimport {GameProvider} from \"./GameContext\";\n\n\nfunction App() {\n\n\n\n    return (\n        <GameProvider>\n        <div className=\"App\">\n\n            <Game/>\n        </div>\n        </GameProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}